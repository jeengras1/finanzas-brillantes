name: 1. Corte Suprema - Validador Constitucional (v5 - Autosuficiente)

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  pull-requests: write

jobs:
  validacion-con-ia-soberana:
    runs-on: ubuntu-latest
    steps:
      - name: 1. Checkout del código del proyecto
        uses: actions/checkout@v4

      # --- !! INICIO DE LA REPARACIÓN !! ---
      - name: 2. Instalar Inspector de IA Soberano (Ollama)
        run: |
          # Descargar e instalar el motor de IA
          curl -fsSL https://ollama.com/install.sh | sh
          
          # Descargar un modelo de IA potente y ligero (Phi-3, ~2.2GB RAM)
          ollama pull phi3:3.8b

      - name: 3. Iniciar Servicio de IA y Verificar
        run: |
          # Iniciar el servicio en segundo plano para que el resto del script continúe
          ollama serve &

          # Esperar 15 segundos para asegurar que el servicio esté completamente listo
          sleep 15
      # --- !! FIN DE LA REPARACIÓN !! ---

      - name: 4. Realizar Validación con IA Soberana
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo, number } = context.issue;
            const fs = require('fs');

            // --- Leer Documentos ---
            const leyDeMision = fs.readFileSync('constitucion/LEY-02-MISION.md', 'utf8');
            const pr = await github.rest.pulls.get({ owner, repo, pull_number: number });
            const propuesta = pr.data.body || "El cuerpo de la propuesta está vacío.";
            
            // --- Preparar Caso para la IA ---
            const prompt = `
              Eres el Abogado Constitucional. Valida si la propuesta se alinea con la Ley de Misión.
              **LEY DE MISIÓN:**\n---\n${leyDeMision}\n---\n
              **NUEVA PROPUESTA:**\n---\n${propuesta}\n---\n
              **VEREDICTO:**
              Responde con un análisis corto. Empieza con "VEREDICTO:" y di si se ALINEA o DESALINEA y por qué.
            `;

            // --- Enviar caso a nuestra IA interna ---
            const response = await fetch('http://localhost:11434/api/generate', {
              method: 'POST',
              body: JSON.stringify({
                model: 'phi-3:3.8b', // Usamos el modelo ligero que descargamos
                prompt: prompt,
                stream: false
              })
            });
            const data = await response.json();
            const veredictoIA = data.response;

            // --- Publicar Veredicto ---
            const comentarioFinal = `
              🏛️ **Veredicto de la Corte Suprema (v5 - Autosuficiente)** 🏛️\n\n
              Se ha consultado a nuestro **Inspector Interno (Nexus v2 - Phi-3)**.\n\n
              **Análisis del Abogado Constitucional:**\n> ${veredictoIA}
            `;
            await github.rest.issues.createComment({ owner, repo, issue_number: number, body: comentarioFinal });
